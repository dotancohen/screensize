#!/usr/bin/env python3

"""
Calculate the dimensions of a screen given its size and aspect ratio.
"""

import sys


class ScreenSizeException(BaseException):
	message = "Exceptional exception!"

	def __init__(self, message=None):
		if message != None:
			self.message = message


class NotEnoughArgsException(ScreenSizeException):
	message = "Not enough arguments"


class SizeNotNumericException(ScreenSizeException):
	message = "Size not numeric"


class InvalidAspectRatioException(ScreenSizeException):
	message = "Aspect ratio invalid"


def main(args):

	if len(args) < 3:
		raise NotEnoughArgsException()

	size = args[1]
	aratio = args[2]

	(width, height) = getWidthHeightFromStr(size, aratio)

	print("Width: " + str(width))
	print("Height: " + str(height))

	return 0


def getWidthHeightFromStr(size:str, aratio_raw:str):

	try:
		size = float(size)
	except ValueError:
		raise SizeNotNumericException()

	if not ":" in aratio_raw:
		raise InvalidAspectRatioException()

	aratio_parts = aratio_raw.split(":")
	try:
		aratio = float(aratio_parts[0]) / float(aratio_parts[1])
	except ValueError:
		raise InvalidAspectRatioException()

	if aratio < 1:
		aratio = 1 / aratio

	return getWidthHeight(size, aratio)


def getWidthHeight(size:float, aratio:float, precision:int=2):

	width = ( size**2 / ( 1 + aratio**-2 ) ) ** 0.5
	height = width / aratio

	return (round(width, precision), round(height, precision))


def printHelp():

	filename = sys.argv[0]

	print("Usage:")
	print("$ " + filename + " Size AspectRatio")
	print("Example:")
	print("$ " + filename + " 5.7 16:9")
	return


if __name__ == "__main__":
	
	try:
		ret = main(sys.argv)
	except ScreenSizeException as e:
		print(e.message)
		print("")
		printHelp()

